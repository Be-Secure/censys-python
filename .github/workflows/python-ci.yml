name: Python CI

on:
  push:
    paths-ignore:
      - "**.rst"
      - "**.md"
    tags-ignore:
      - "*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python: ["3.6", "3.x"]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip poetry
          poetry config virtualenvs.in-project true

      - name: Cache poetry
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: .venv
          # Look to see if there is a cache hit for the corresponding requirements file
          key: venv-${{ runner.os }}-py${{ matrix.python }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Lint with flake8
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          poetry run flake8 --max-line-length=127

      - name: Type checking with mypy
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          poetry run mypy censys

      - name: Test with pytest
        run: |
          poetry run pytest
